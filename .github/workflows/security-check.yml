name: 🔒 Security Check - MussikOn

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Ejecutar diariamente a las 2:00 AM UTC
    - cron: '0 2 * * *'

jobs:
  security-check:
    name: 🔍 Verificación de Seguridad
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4
      with:
        # Solo acceder a documentación pública
        sparse-checkout: |
          docs/
          README.md
          LICENSE.md
          .github/
          !src/
          !app/
          !components/
          !screens/
          !services/
          !utils/
          !hooks/
          !contexts/
          !store/
          !config/
          !types/
          !appTypes/
          !package.json
          !tsconfig.json
          !app.json
          !metro.config.js
          !babel.config.js
          !.env*

    - name: 🔍 Verificar Protección de Código
      run: |
        echo "🔒 Verificando protección del código fuente..."
        
        # Verificar que archivos sensibles no estén expuestos
        if [ -d "src" ]; then
          echo "❌ ERROR: Código fuente expuesto en /src/"
          exit 1
        fi
        
        if [ -f "package.json" ]; then
          echo "❌ ERROR: package.json expuesto"
          exit 1
        fi
        
        if [ -f "app.json" ]; then
          echo "❌ ERROR: app.json expuesto"
          exit 1
        fi
        
        echo "✅ Código fuente protegido correctamente"

    - name: 📚 Verificar Documentación Pública
      run: |
        echo "📚 Verificando documentación pública..."
        
        # Verificar que la documentación esté disponible
        if [ ! -d "docs" ]; then
          echo "❌ ERROR: Documentación no encontrada"
          exit 1
        fi
        
        if [ ! -f "README.md" ]; then
          echo "❌ ERROR: README.md no encontrado"
          exit 1
        fi
        
        if [ ! -f "LICENSE.md" ]; then
          echo "❌ ERROR: LICENSE.md no encontrado"
          exit 1
        fi
        
        echo "✅ Documentación pública disponible"

    - name: 🔐 Verificar Configuración de Seguridad
      run: |
        echo "🔐 Verificando configuración de seguridad..."
        
        # Verificar archivos de configuración de seguridad
        if [ ! -f ".github/CODE_ACCESS_POLICY.md" ]; then
          echo "❌ ERROR: Política de acceso al código no encontrada"
          exit 1
        fi
        
        if [ ! -f ".gitignore" ]; then
          echo "❌ ERROR: .gitignore no encontrado"
          exit 1
        fi
        
        echo "✅ Configuración de seguridad correcta"

    - name: 📋 Generar Reporte de Seguridad
      run: |
        echo "📋 Generando reporte de seguridad..."
        
        echo "## 🔒 Reporte de Seguridad - MussikOn" > security-report.md
        echo "" >> security-report.md
        echo "**Fecha**: $(date)" >> security-report.md
        echo "**Estado**: ✅ SEGURO" >> security-report.md
        echo "" >> security-report.md
        echo "### ✅ Verificaciones Exitosas:" >> security-report.md
        echo "- Código fuente protegido" >> security-report.md
        echo "- Documentación pública disponible" >> security-report.md
        echo "- Configuración de seguridad correcta" >> security-report.md
        echo "- Licencia de uso restringido activa" >> security-report.md
        echo "" >> security-report.md
        echo "### 📊 Estadísticas:" >> security-report.md
        echo "- Archivos protegidos: $(find . -name "*.ts" -o -name "*.tsx" -o -name "*.js" -o -name "*.jsx" | wc -l)" >> security-report.md
        echo "- Documentos públicos: $(find docs -name "*.md" | wc -l)" >> security-report.md
        echo "- Políticas de seguridad: $(find .github -name "*.md" | wc -l)" >> security-report.md

    - name: 📤 Subir Reporte de Seguridad
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md

  license-check:
    name: 📜 Verificación de Licencia
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔍 Verificar Licencia
      run: |
        echo "📜 Verificando licencia de uso restringido..."
        
        if [ ! -f "LICENSE.md" ]; then
          echo "❌ ERROR: LICENSE.md no encontrado"
          exit 1
        fi
        
        # Verificar que la licencia contenga términos de uso restringido
        if ! grep -q "PROHIBIDO.*uso comercial" LICENSE.md; then
          echo "❌ ERROR: Licencia no contiene prohibición de uso comercial"
          exit 1
        fi
        
        if ! grep -q "Código fuente.*RESTRINGIDO" LICENSE.md; then
          echo "❌ ERROR: Licencia no protege el código fuente"
          exit 1
        fi
        
        echo "✅ Licencia de uso restringido correcta"

  documentation-check:
    name: 📚 Verificación de Documentación
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Repository
      uses: actions/checkout@v4

    - name: 🔍 Verificar Documentación
      run: |
        echo "📚 Verificando documentación pública..."
        
        # Verificar archivos de documentación principales
        required_docs=("README.md" "LICENSE.md" "docs/INDEX.md" "docs/DOCUMENTATION_SUMMARY.md")
        
        for doc in "${required_docs[@]}"; do
          if [ ! -f "$doc" ]; then
            echo "❌ ERROR: $doc no encontrado"
            exit 1
          fi
        done
        
        # Verificar estructura de documentación
        if [ ! -d "docs" ]; then
          echo "❌ ERROR: Carpeta docs no encontrada"
          exit 1
        fi
        
        echo "✅ Documentación pública completa"

    - name: 📊 Generar Estadísticas de Documentación
      run: |
        echo "📊 Generando estadísticas de documentación..."
        
        echo "## 📚 Estadísticas de Documentación" > docs-stats.md
        echo "" >> docs-stats.md
        echo "**Fecha**: $(date)" >> docs-stats.md
        echo "" >> docs-stats.md
        echo "### 📁 Archivos de Documentación:" >> docs-stats.md
        echo "- README.md: $(wc -l < README.md) líneas" >> docs-stats.md
        echo "- LICENSE.md: $(wc -l < LICENSE.md) líneas" >> docs-stats.md
        echo "- docs/INDEX.md: $(wc -l < docs/INDEX.md) líneas" >> docs-stats.md
        echo "- docs/DOCUMENTATION_SUMMARY.md: $(wc -l < docs/DOCUMENTATION_SUMMARY.md) líneas" >> docs-stats.md
        echo "" >> docs-stats.md
        echo "### 📂 Estructura de Documentación:" >> docs-stats.md
        find docs -name "*.md" | wc -l | xargs echo "- Total archivos .md: " >> docs-stats.md
        echo "- Carpetas de documentación: $(find docs -type d | wc -l)" >> docs-stats.md

    - name: 📤 Subir Estadísticas de Documentación
      uses: actions/upload-artifact@v4
      with:
        name: documentation-stats
        path: docs-stats.md

  notify-security:
    name: 📢 Notificación de Seguridad
    runs-on: ubuntu-latest
    needs: [security-check, license-check, documentation-check]
    if: always()
    
    steps:
    - name: 📧 Enviar Notificación
      run: |
        echo "📢 Enviando notificación de estado de seguridad..."
        
        if [ "${{ needs.security-check.result }}" == "success" ] && \
           [ "${{ needs.license-check.result }}" == "success" ] && \
           [ "${{ needs.documentation-check.result }}" == "success" ]; then
          echo "✅ Todas las verificaciones de seguridad exitosas"
          echo "🔒 Código fuente protegido correctamente"
          echo "📚 Documentación pública disponible"
          echo "📜 Licencia de uso restringido activa"
        else
          echo "❌ Algunas verificaciones de seguridad fallaron"
          echo "🔍 Revisar logs para más detalles"
        fi 